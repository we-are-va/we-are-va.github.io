title: The Various Artists
short_title: weareva
description: static site - booooom!
baseurl:
permalink: "/:path/"
defaults:
  - scope:
      path: ""
    values:
      layout: page
collections:
  people:
    output: true
    permalink: "/about/:path/"
  work:
    output: true
    permalink: "/work/:path/"
  landingpage:
    output: true
    permalink: "/:path/"
# tag_page_layout: tag_page
# tag_page_dir: tag
plugins:
  - jekyll-menus
  - jekyll-feed
  - jekyll-responsive-image
  - jekyll-seo-tag
  - jekyll-inline-svg
  - jekyll-sitemap
  - jekyll-webp
# svg Optimise
svg:
  optimize: true  
# Responsive images
#picture:
 # source: "uploads"
  #output: "uploads/resized"
 # ignore_missing_images: true

responsive_image:
  # [Required]
  # Path to the image template.
  template: _includes/picture.html

  # [Optional, Default: 85]
  # Quality to use when resizing images.
  default_quality: 98

  # [Optional, Default: []]
  # An array of resize configuration objects. Each object must contain at least
  # a `width` value.
  sizes:
    - width: 480  # [Required] How wide the resized image will be.
      quality: 98 # [Optional] Overrides default_quality for this size.
    - width: 800
    - width: 1400
      quality: 98

  # [Optional, Default: false]
  # Rotate resized images depending on their EXIF rotation attribute. Useful for
  # working with JPGs directly from digital cameras and smartphones
  auto_rotate: false

  strip: true

  # [Optional, Default: assets]
  # The base directory where assets are stored. This is used to determine the
  # `dirname` value in `output_path_format` below.
  base_path: uploads

  # [Optional, Default: assets/resized/%{filename}-%{width}x%{height}.%{extension}]
  # The template used when generating filenames for resized images. Must be a
  # relative path.
  #
  # Parameters available are:
  #   %{dirname}     Directory of the file relative to `base_path` (assets/sub/dir/some-file.jpg => sub/dir)
  #   %{basename}    Basename of the file (assets/some-file.jpg => some-file.jpg)
  #   %{filename}    Basename without the extension (assets/some-file.jpg => some-file)
  #   %{extension}   Extension of the file (assets/some-file.jpg => jpg)
  #   %{width}       Width of the resized image
  #   %{height}      Height of the resized image
  #
  output_path_format: uploads/resized/%{width}/%{basename}

  # [Optional, Default: true]
  # Whether or not to save the generated assets into the source folder.
  save_to_source: true

  # [Optional, Default: false]
  # Cache the result of {% responsive_image %} and {% responsive_image_block %} 
  # tags. See the "Caching" section of the README for more information.
  cache: false

  #/ [Optional, Default: []]
  # By default, only images referenced by the responsive_image and responsive_image_block
  # tags are resized. Here you can set a list of paths or path globs to resize other
  # images. This is useful for resizing images which will be referenced from stylesheets.
  # extra_images:
  #   - assets/foo/bar.png
  #   - assets/bgs/*.png
  #   - assets/avatars/*.{jpeg,jpg}


  ############################################################
# Site configuration for the WebP Generator Plugin
# The values here represent the defaults if nothing is set
webp:
  enabled: true
  
  # The quality of the webp conversion 0 to 100 (where 100 is least lossy)
  quality: 90

  # List of directories containing images to optimize, nested directories will only be checked if `nested` is true
  # By default the generator will search for a folder called `/img` under the site root and process all jpg, png and tiff image files found there.
  img_dir: ["/uploads"]

  # Whether to search in nested directories or not
  nested: false

  # add ".gif" to the format list to generate webp for animated gifs as well
  formats: [".jpeg", ".jpg", ".png", ".tiff"]

  # File extensions for animated gif files 
  gifs: [".gif"]

  # Set to true to always regenerate existing webp files
  regenerate: false

  # Local path to the WebP utilities to use (relative or absolute)
  # Omit or leave as nil to use the utilities shipped with the gem, override only to use your local install
  webp_path: nil

  # List of files or directories to exclude
  # e.g. custom or hand generated webp conversion files
  exclude: []

  # append '.webp' to filename after original extension rather than replacing it.
  # Default transforms `image.png` to `image.webp`, while changing to true transforms `image.png` to `image.png.webp`
  append_ext: false
############################################################